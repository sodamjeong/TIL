# 9498 시험성적
grade = int(input())

if grade < 60:
    print('F')
elif grade < 70:
    print('D')
elif grade < 80:
    print('C')
elif grade < 90:
    print('B')
else:
    print('A')
# 처음에 만들었던 코드 보다 보니 10의 단위 인 것 같아 몫을 가지고 인덱스화 할 수 있어 보였다.

print('FFFFFFDCBAA'[int(input())//10])
# 그래서 만들어 본 코드
# 0 ~ 59 의 몫 0 ~ 5의 위치에 F, 60 ~ 69 의 몫 6의 위치에 D, 70 ~ 79의 몫 7의 위치에 C
# 80 ~ 89 의 몫 8의 위치에 B, 나머지  9 그리고 100점 10의 위치에 A를 나열해
# 입력된 점수 10 의 자리수로 학점을 출력 할 수 있게 해봤다.

# 9093 단어 뒤집기

import sys # input으로 코드를 만들었더니 계산 시간이 너~무 길게 나와서 
input = sys.stdin.readline # input 에 sys 를 이용하였다.

for i in range(int(input())):
    print(*[s[::-1] for s in input().split()])
# 입력한 문자열이 공백을 기준으로 단어를 분리하여 [::-1] 슬라이싱으로 단어를 뒤집어
# 리스트를 만들고 요소를 출력하도록 했다.

# 11721 열 개 씩 끊어 출력하기

n = [i for i in input()]

while len(n) > 0:
    print(''.join(n[0:10]))
    del(n[0:10])
# 입력 받는 문장을 리스트로 만들고 첫번째 문자부터 10번째 문자까지 출력하고
# 출력한 문자는 삭제 , 입력받은 문장의 리스트 길이가 0이 될 때까지
# 다음 10개의 문자를 출력하도록 했다. 

# 2안 
S = input()

for i in range(0, len(S), 10):
    print(S[i:i+10])

# 조별 코드리뷰시간에 다른 조원 분이 작성하신 코드
# 문장의 길이까지 순회하도록 하고 10 스텝의 단위로 넘어갈 수있게 만드셨다.
# 간단하고 보기 깔끔해 좋은 코드인 것 같다.

# 2947 나무 조각

n = [1, 2, 3, 4, 5]
m = list(map(int,input().split()))

while n != m: # 입력한 리스트가 리스트 n과 동일 할 때까지 순회
    a = 1
    for i in m:
        try:
            if i > m[a]: # 다음 요소보다 큰 지 확인하는 if 문
                m.remove(i) # 다음 요소보다 크다면 리스트에서 해당요소를 삭제하고
                m.insert(a,i) # 다음요소 자리에 삽입하여 두 요소의 자리를 바꿔준다.
                a += 1 # 다음 자리의 요소와 비교하기 위해 1을 더해줬다.
                print(*m) # 자리가 한번 바뀔 때 마다 출력
            elif i < m[a]: # 다음 요소보다 작다면
                a += 1 # 다음 비교를 위해 a 값에 1만 더해줬다.
        except: # 이렇게 할 경우 index 의 값이 리스트의 길이보다 커져 다시 처음 부터 확인 할 수가 없어
            pass # 발생하는 오류를 무시하고 처음부터 다시 순회 돌 수 있도록 except 를 사용해 pass 시켰다.

#2안

import sys
input = sys.stdin.readline
m = list(map(int, input().split()))

while m != [1, 2, 3, 4, 5]:
    for i in range(4): # 횟수가 정확하게 정해져 while 문을 순회하는데 내 코드보다 용이해보인다.
        if m[i] > m[i+1]: # 다음 요소보다 클때
            m[i], m[i+1] = m[i+1], m[i] # 두 요소의 자리를 바꾸고
            print(*m) # 자리를 바꿨다면 출력된다. 
# 5번 순회를 돌고 리스트가 [1, 2, 3, 4, 5]가 아니라면 다시 처음부터 순회를 돌 것 이다.

# 조별 코드 리뷰 시간에 다른 조원분이 쓰신 코드가 좋아 가져 와봤다.
# 내가 작성한 코드보다 간결하고 요소의 위치를 서로 바꾸는게 잘 되어 있어 좋은 코드로 보인다.
